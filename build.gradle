plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group 'club.ampthedev.mcgradle'
version '2.0.0-rc5'

repositories {
    mavenCentral()
    maven {
        url 'https://files.minecraftforge.net/maven'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/base/java']
        }
        kotlin {
            srcDirs = ['src/base/java', 'src/base/kotlin']
        }
        resources {
            srcDirs = ['src/base/resources']
        }
    }
    patch {}
    user {}
    newdecomp {}
    mcinjectstart {}
}

configurations {
    forgeflower
    mcinjector
    compileOnly.extendsFrom mcinjector
}

dependencies {
    implementation gradleApi()
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.5.1.201910021850-r'
    implementation group: 'org.ow2.asm', name: 'asm', version: '7.2'
    implementation group: 'org.ow2.asm', name: 'asm-tree', version: '7.2'
    implementation group: 'org.ow2.asm', name: 'asm-util', version: '7.2'
    implementation group: 'org.ow2.asm', name: 'asm-commons', version: '7.2'
    implementation group: 'org.ow2.asm', name: 'asm-analysis', version: '7.2'
    implementation 'com.github.abrarsyed.jastyle:jAstyle:1.3'
    implementation group: 'com.nothome', name: 'javaxdelta', version: '2.0.1'
    implementation 'com.github.jponge:lzma-java:1.3'
    implementation(group: 'net.minecraftforge', name: 'mergetool', version: '1.0.1') {
        exclude module: 'asm'
        exclude module: 'asm-util'
        exclude module: 'asm-tree'
    }
    implementation 'net.sf.opencsv:opencsv:2.3'
    implementation 'net.minecraftforge:forgeflower:1.0.342-SNAPSHOT'
    runtimeOnly('de.oceanlabs.mcp:mcinjector:3.7.7') {
        exclude module: 'gson'
    }
    mcinjectstartImplementation 'de.oceanlabs.mcp:mcinjector:3.7.7'
    mcinjectstartImplementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    forgeflower 'net.minecraftforge:fernflower:2.0-SNAPSHOT'
    implementation 'com.cloudbees:diff4j:1.1'
    implementation('net.minecraftforge.srg2source:Srg2Source:3.3-SNAPSHOT') {
        exclude module: 'asm-debug-all'
    }
    mcinjector('de.oceanlabs.mcp:mcinjector:3.4-SNAPSHOT') {
        exclude module: 'asm-debug-all'
        exclude module: 'gson'
        exclude module: 'jopt-simple'
        exclude module: 'asm'
        exclude module: 'asm-tree'
    }
    implementation('net.md-5:SpecialSource:1.7.4') {
        exclude module: 'asm-debug-all'
    }

    patchImplementation sourceSets.main.output
    patchImplementation sourceSets.main.compileClasspath
    userImplementation sourceSets.main.output
    userImplementation sourceSets.main.compileClasspath
    newdecompImplementation sourceSets.main.output
    newdecompImplementation sourceSets.main.compileClasspath
}

shadowJar {
    from sourceSets.patch.output
    from sourceSets.user.output


    dependsOn patchClasses
    dependsOn userClasses
    dependsOn classes

    destinationDirectory = getTemporaryDir()
    configurations = [project.configurations.forgeflower, project.configurations.mcinjector]
    relocate 'org.jetbrains.java.decompiler', 'ff'
    relocate 'de.oceanlabs.mcp.mcinjector', 'mcinjector'
}

task finalJar(type: Jar) {
    from sourceSets.newdecomp.output
    from sourceSets.mcinjectstart.output
    from project.zipTree(shadowJar.archiveFile)

    dependsOn newdecompClasses
    dependsOn shadowJar
    dependsOn jar
}

task sourcesJar(type: Jar) {
    from sourceSets.patch.allSource
    from sourceSets.user.allSource
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

assemble.dependsOn finalJar
publish.dependsOn finalJar

publishing {
    repositories {
        maven {
            url = "$buildDir/repository"
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifacts.clear()
            artifact sourcesJar
            artifact finalJar
            pom {
                name = 'MCGradle'
                description = 'Gradle plugin for Minecraft modding'
                url = 'https://github.com/AmpTheDev/MCGradle'
                licenses {
                    license {
                        name = 'GNU LGPL'
                        url = 'https://raw.githubusercontent.com/AmpTheDev/MCGradle/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ampthedev'
                        name = 'AmpTheDev'
                        email = 'ampthedev@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/AmpTheDev/MCGradle.git'
                    developerConnection = 'scm:git:ssh://github.com/AmpTheDev/MCGradle.git'
                    url = 'https://github.com/AmpTheDev/MCGradle'
                }
            }
        }
    }
}